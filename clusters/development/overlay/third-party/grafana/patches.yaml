apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: grafana
  namespace: flux-system
spec:
  patches:
    - target:
        kind: HelmRelease
        name: grafana
        namespace: monitor
      patch: |-
        apiVersion: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        metadata:
          name: grafana
          namespace: monitor
        spec:
          chart:
            spec:
              version: ${GRAFANA_VERSION}
          postRenderers:
            - kustomize:
                patches:
                  - target:
                      version: v1
                      kind: Deployment
                      namespace: monitor
                      name: grafana
                    patch: |
                      - op: add
                        path: /spec/template/metadata/labels/azure.workload.identity~1use
                        value: "true"
                      - op: add
                        path: /spec/template/spec/containers/0/volumeMounts
                        value: 
                          - mountPath: /var/run/secrets/ossrdbms-aad
                            name: access-token-volume
                            readOnly: true
                                        
          values:
            env:
              GF_SERVER_ROOT_URL: https://grafana.${AZ_RESOURCE_DNS}
              
              GF_DATABASE_URL: mysql://radix-id-grafana-admin-dev:$__file{/var/run/secrets/ossrdbms-aad/token}@${GRAFANA_DB_HOST}/grafana?allowCleartextPasswords=1
              # GF_DATABASE_HOST: ${GRAFANA_DB_HOST} # Set in postBuild.yaml
              # GF_DATABASE_NAME: grafana
              # GF_DATABASE_USER: radix-id-grafana-admin-dev
              # GF_DATABASE_PASSWORD: $__file{/var/run/secrets/azure/tokens/azure-identity-token}
              GF_AUTH_GENERIC_OAUTH_CLIENT_ID: f545deb5-f721-4d20-87cd-b046b5119d70

            ingress:
              enabled: true
              hosts:
                - grafana.${clusterName}.${AZ_RESOURCE_DNS}
                - grafana.${AZ_RESOURCE_DNS}
              tls:
                - secretName: radix-wildcard-tls-cert
                  hosts:
                    - grafana.${clusterName}.${AZ_RESOURCE_DNS}
                    - grafana.${AZ_RESOURCE_DNS}
        
            serviceAccount:
              annotations:
                azure.workload.identity/client-id: 1150acff-2bc7-47df-a1b2-b45dbeaaf58a
            
            extraContainerVolumes: 
              - name: access-token-volume
                emptyDir: {}
            extraInitContainers:          
            - name: fetch-token
              image: mcr.microsoft.com/azure-cli:2.55.0
              securityContext:
                runAsUser: 1000
              restartPolicy: Always
              livenessProbe:
                exec:
                  command: ['cat', '/tmp/token']
                initialDelaySeconds: 5
              volumeMounts:
              - name: access-token-volume
                mountPath: /tmp
              env:
                - name: HOME
                  value: "/tmp"
              command:
              - 'sh'
              - '-c'
              - |
                # Log in to Azure with the provided credentials, that matches the configured ferated credential
                az login --service-principal --username $AZURE_CLIENT_ID --tenant $AZURE_TENANT_ID --federated-token `cat $AZURE_FEDERATED_TOKEN_FILE` --allow-no-subscriptions
                
                TOKEN=`az account get-access-token --resource https://ossrdbms-aad.database.windows.net --query accessToken --output tsv`
                if [ -n "$TOKEN" ]; then
                  echo "$TOKEN" > /tmp/token
                fi
                ls -lah /tmp
                sleep 3000
                :
