apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: radix-sp-acr-azure
  namespace: default
spec:
  secretStoreRef:
    name: radix-keyvault
    kind: ClusterSecretStore
  refreshInterval: "1h"

  target:

    # Specify a blueprint for the resulting Kind=Secret
    template:

      metadata:
        annotations:
          replicator.v1.mittwald.de/replicate-to-matching: radix-env=app
        labels: {}

      # Use inline templates to construct your desired config file that contains your secret
      data:
        sp_credentials.json: |    
          {{ .radix_cr_cicd }}

  data:
    - secretKey: radix_cr_cicd
      remoteRef:
        key: radix-cr-cicd
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: radix-sp-buildah-azure
  namespace: default
spec:
  secretStoreRef:
    name: radix-keyvault
    kind: ClusterSecretStore
  refreshInterval: "1h"
  target:
    template:

      metadata:
        annotations:
          replicator.v1.mittwald.de/replicate-to-matching: radix-env=app
        labels: {}
      data:
        username: "{{ .username }}"
        password: "{{ .password }}"
  data:
  - secretKey: username
    remoteRef:
      key: radix-cr-cicd
      property: id
  - secretKey: password
    remoteRef:
      key: radix-cr-cicd
      property: password

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: radix-registry-default-auth
  namespace: default
spec:
  secretStoreRef:
    name: radix-keyvault
    kind: ClusterSecretStore
  refreshInterval: "1h"
  target:
    template:
      # metadata:
      #   annotations:
      #     replicator.v1.mittwald.de/replicate-to-matching: radix-app
      #   labels: {}
      data:
        .dockerconfigjson: '{"auths":{"docker.io":{"username":"{{ .username }}","password":"{{ .password }}","auth":"{{ printf "%s:%s" .username .password | b64enc }}"}}}'
  data:
  - secretKey: username
    remoteRef:
      key: docker-io-auth-username
  - secretKey: password
    remoteRef:
      key: docker-io-auth-password

