apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  dependsOn:
    - name: kube-prometheus-stack
      namespace: monitor
  chart:
    spec:
      chart: ingress-nginx
      version: ${NGINX_VERSION} # Set by flux patch
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  interval: 1m0s
  install:
    remediation:
      retries: 3
  values:
    controller:
      enableAnnotationValidations: true
      image:
        chroot: true
      podLabels:
        app: ingress-nginx
        grafana.radix.equinor.com/monitor-health: "true"
      publishService:
        enabled: true
      stats:
        enabled: true
      metrics:
        serviceMonitor:
          enabled: true
        enabled: true
      service:
        externalTrafficPolicy: Local
      ingressClassResource:
        name: nginx
        enabled: true
        default: true
        controllerValue: "k8s.io/ingress-nginx"
      ingressClassByName: true
      watchIngressWithoutClass: true
      config:
        worker-processes: "1"
        max-worker-connections: "5000"
        worker-shutdown-timeout: "3600s"
        annotations-risk-level: "High"
        strict-validate-path-type: "false"
        proxy-buffer-size: "32k" # See https://stackoverflow.com/a/40306737 for a great explanation
        proxy-busy-buffers-size: 32k # https://github.com/kubernetes/ingress-nginx/issues/13598
        proxy-body-size: "100m"
        proxy-buffering: "on"
        large-client-header-buffers: "4 32k"
        custom-http-errors: "503"
        log-format-escape-json: "true"
        log-format-upstream: '{
            "time": "$time_iso8601", 
            "remote_addr": "$proxy_protocol_addr", 
            "x_forwarded_for": "$proxy_add_x_forwarded_for", 
            "request_id": "$req_id",
            "remote_user": "$remote_user", 
            "bytes_sent": $bytes_sent, 
            "request_time": $request_time, 
            "status": $status, 
            "vhost": "$host", 
            "request_proto": "$server_protocol",
            "path": "$uri", 
            "request_query": "$args", 
            "request_length": $request_length,
            "duration": $request_time,
            "method": "$request_method", 
            "http_referrer": "$http_referer",
            "http_user_agent": "$http_user_agent"
          }'
      extraArgs:
        default-backend-service: "$(POD_NAMESPACE)/radix-default-backend"
        default-ssl-certificate: "default/radix-wildcard-tls-cert"

      priorityClassName: radix-component-priority

    defaultBackend:
      enabled: false
