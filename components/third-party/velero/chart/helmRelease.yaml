# For velero chart doc see https://github.com/vmware-tanzu/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: velero
  namespace: velero
spec:
  releaseName: velero
  chart:
    spec:
      chart: velero
      version: xx # Set by flux patch
      sourceRef:
        kind: HelmRepository
        name: velero
        namespace: flux-system
  interval: 5m
  install:
    remediation:
      retries: 3
  values:
    image:
      repository: ${RADIX_CACHE_REGISTRY}/velero/velero
    updateStrategy: RollingUpdate
    initContainers:
      - name: velero-plugin-for-microsoft-azure
        image: ${RADIX_CACHE_REGISTRY}/velero/velero-plugin-for-microsoft-azure:${VELERO_AZURE_PLUGIN_TAG} # Set in clusters/<cluster>/postBuild
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
          - name: plugins
            mountPath: /target
      - name: radix-velero-plugin
        image: ${VELERO_RADIX_PLUGIN_IMAGE} # Set in clusters/<cluster>/postBuild
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
          - name: plugins
            mountPath: /target
    credentials:
      useSecret: false
    serviceAccount:
      server:
        annotations:
          azure.workload.identity/client-id: ${VELERO_AZURE_WORKLOAD_IDENTITY_ID}
        create: true
        labels:
          azure.workload.identity/use: "true"
        name: velero
    podLabels:
      azure.workload.identity/use: "true"
      grafana.radix.equinor.com/monitor-health: "true"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    # resources: xx # Set by flux patch
    priorityClassName: radix-component-priority
    upgradeJobResources:
      limits:
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 256Mi
    containerSecurityContext:
      readOnlyRootFilesystem: true
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - arm64
  # valuesFrom:
  #   - kind: ConfigMap
  #     name: velero-flux-values
  #     valuesKey: values
